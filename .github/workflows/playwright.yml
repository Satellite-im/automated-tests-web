name: Playwright Tests

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    paths-ignore:
      - ".gitignore"
      - ".prettierignore"
      - ".prettierrc.json"
      - "PULL_REQUEST_TEMPLATE.md"
      - "README.md"
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: macos-latest

    steps:
      - name: Checkout Uplink Web directory ðŸ”–
        uses: actions/checkout@v4
        with:
          repository: Satellite-im/UplinkWeb

      - name: Checkout Automated Tests directory ðŸ”–
        uses: actions/checkout@v4
        with:
          path: automated-tests

      - name: Setup Node.js for Uplink Web ðŸ”¨
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies for Uplink Web ðŸ“¦
        run: npm install

      - name: Install dependencies for Testing Repo ðŸ“¦
        working-directory: automated-tests
        run: npm install

      - name: Install Playwright Browsers
        working-directory: automated-tests
        run: npx playwright install --with-deps

      - name: Run server for Uplink Web
        run: npm run dev &

      - name: Run Playwright tests
        working-directory: automated-tests
        run: npx playwright test

      - name: Upload Playwright report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: automated-tests/playwright-report

      - name: Archive and upload test videos
        if: always()
        run: |
          mkdir -p upload-videos
          cp -r automated-tests/playwright-report/videos/* upload-videos/
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: upload-videos/

      - name: Post comment with report and video links
        if: always() && github.event_name == 'pull_request'
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.repository }}/playwright-report/index.html"
          VIDEO_DIR_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
          VIDEOS=$(find upload-videos -type f)
          VIDEO_LINKS=""
          for VIDEO in $VIDEOS; do
            VIDEO_NAME=$(basename $VIDEO)
            VIDEO_LINK="$VIDEO_DIR_URL/$VIDEO_NAME"
            VIDEO_LINKS="$VIDEO_LINKS\n- [$VIDEO_NAME]($VIDEO_LINK)"
          done
          COMMENT="Playwright test report: [View Report]($REPORT_URL)\n\nTest videos:$VIDEO_LINKS"
          gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh
